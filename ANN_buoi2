{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMkvbppl6Ja8UDwJBCcDE37"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nhjPTOBpEBeX","executionInfo":{"status":"ok","timestamp":1666079297838,"user_tz":-420,"elapsed":4385,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}},"outputId":"407226cd-efa4-432d-c60a-75dbe58cdcbd"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n"]},{"output_type":"execute_result","data":{"text/plain":["(60000,)"]},"metadata":{},"execution_count":1}],"source":["from keras.datasets import mnist\n","(train_images, train_labels), (test_images, test_labels)= mnist.load_data()\n","\n","train_images.shape\n","train_labels.shape\n"]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.imshow(train_images[5005]) # lay hinh du lieu so 5000\n","plt.show()\n","\n","print(train_labels[5005])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"En_ea3ZfEFLo","executionInfo":{"status":"ok","timestamp":1666079307083,"user_tz":-420,"elapsed":1172,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}},"outputId":"d8482aa5-9ac8-4bb0-e225-ed6a7c7c8de8"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["8\n"]}]},{"cell_type":"code","source":["from keras import models\n","from keras import layers\n","\n","model = models.Sequential() #nhan dien OCR\n","model.add(layers.Dense(512, activation = 'relu',input_shape=(28*28,)))\n","model.add(layers.Dense(10, activation ='softmax'))\n","model.summary()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2fwc7TaMEK5T","executionInfo":{"status":"ok","timestamp":1666079383709,"user_tz":-420,"elapsed":7,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}},"outputId":"039a8b64-abee-48cb-b3d8-2187b5abedcd"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_3 (Dense)             (None, 512)               401920    \n","                                                                 \n"," dense_4 (Dense)             (None, 10)                5130      \n","                                                                 \n","=================================================================\n","Total params: 407,050\n","Trainable params: 407,050\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["train_images = train_images.reshape(60000, 28*28)\n","train_images = train_images.astype('float32')/255\n","test_images = test_images.reshape(10000, 28*28)\n","test_images = test_images.astype('float')/255"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":225},"id":"tO-bzcunENFT","executionInfo":{"status":"error","timestamp":1666079431547,"user_tz":-420,"elapsed":425,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}},"outputId":"52fd6481-0192-43a9-fd26-a42019f6d774"},"execution_count":8,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-4d998454612e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain_images\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_images\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m60000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m28\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;36m28\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mtrain_images\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_images\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'float32'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m255\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mtest_images\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_images\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m28\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;36m28\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mtest_images\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_images\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'float'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m255\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'builtin_function_or_method' object has no attribute 'reshape'"]}]},{"cell_type":"code","source":["      #One hot encoding\n","from keras.utils import to_categorical\n","train_labels = to_categorical(train_labels)\n","test_labels = to_categorical(test_labels)\n","\n"],"metadata":{"id":"6ymrD2R_Efz5","executionInfo":{"status":"ok","timestamp":1666079480342,"user_tz":-420,"elapsed":429,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer= 'rmsprop', loss= 'categorical_crossentropy', metrics= ['accuracy']  ) #bien dich\n","model.fit(train_images, train_labels, epochs = 100, batch_size = 128 )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"qN_AQVGGEtw0","executionInfo":{"status":"error","timestamp":1666079505845,"user_tz":-420,"elapsed":406,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}},"outputId":"466715ad-edd3-4911-b351-5c8f383faf32"},"execution_count":11,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-bad048c37278>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;34m'rmsprop'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;34m'categorical_crossentropy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;34m)\u001b[0m \u001b[0;31m#bien dich\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_images\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_labels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m128\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/data_adapter.py\u001b[0m in \u001b[0;36mselect_data_adapter\u001b[0;34m(x, y)\u001b[0m\n\u001b[1;32m    986\u001b[0m         \u001b[0;34m\"Failed to find data adapter that can handle \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    987\u001b[0m         \"input: {}, {}\".format(\n\u001b[0;32m--> 988\u001b[0;31m             _type_name(x), _type_name(y)))\n\u001b[0m\u001b[1;32m    989\u001b[0m   \u001b[0;32melif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0madapter_cls\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    990\u001b[0m     raise RuntimeError(\n","\u001b[0;31mValueError\u001b[0m: Failed to find data adapter that can handle input: <class 'builtin_function_or_method'>, <class 'numpy.ndarray'>"]}]},{"cell_type":"code","source":["test_loss, test_acc = model.evaluate(test_images, test_labels)\n","print('Test.accuracy', test_acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":612},"id":"0ZgQ-Xu6E2CZ","executionInfo":{"status":"error","timestamp":1666079900577,"user_tz":-420,"elapsed":883,"user":{"displayName":"Luong Ngoc Hieu","userId":"10528539315005445391"}},"outputId":"16c3efbe-99c6-433a-ed16-3c658dabab14"},"execution_count":13,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-aa999531194a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtest_loss\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_acc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_images\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_labels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Test.accuracy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_acc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mtf__test_function\u001b[0;34m(iterator)\u001b[0m\n\u001b[1;32m     13\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m                     \u001b[0mdo_return\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m                     \u001b[0mretval_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep_function\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m                 \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m                     \u001b[0mdo_return\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: in user code:\n\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1557, in test_function  *\n        return step_function(self, iterator)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1546, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1535, in run_step  **\n        outputs = model.test_step(data)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1499, in test_step\n        y_pred = self(x, training=False)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/input_spec.py\", line 264, in assert_input_compatibility\n        raise ValueError(f'Input {input_index} of layer \"{layer_name}\" is '\n\n    ValueError: Input 0 of layer \"sequential_2\" is incompatible with the layer: expected shape=(None, 784), found shape=(None, 28, 28)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"CniueiDuGYEN"},"execution_count":null,"outputs":[]}]}